{"version":3,"sources":["Pages/Home/index.js","Pages/Covid19/Banner.js","Pages/Covid19/Statedata.js","Pages/Covid19/index.js","App.js","serviceWorker.js","index.js"],"names":["Home","render","className","style","color","React","Component","Banner","src","Statedata","props","stateData","state","data","isLoaded","summary","statewise","totalSummary","confirmed","backgroundColor","active","recovered","deaths","lastupdatedtime","shown","map","onClick","setState","show","fetch","then","response","json","findresponse","Covid19","posts","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.35abff25.chunk.js","sourcesContent":["import React from 'react'\nimport './styles.scss'\n\nexport default class Home extends React.Component {\n  render = () => {\n    return (\n      <div className=\"main-widget\">\n        <div className=\"content\">\n          <div className='title'>\n            <div>It's Me</div>\n            <h1>Baiju.</h1>\n            <div style={{ color: 'white' }}>WILL BACK SOON...</div>\n          </div>\n          <div className=\"left\" />\n          <div className=\"right\" />\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\n\nexport default class Banner extends React.Component {\n  render = () => {\n    return (\n      <div className=\"covid-banner\">\n        <div className=\"image-section\">\n          <img\n            src={\n              'https://hw-prod-static-assets.s3.ap-south-1.amazonaws.com/marketing/website/hello-logo-safe.jpg'\n            }\n          />\n        </div>\n        <h1>\n          Stay Home <br /> Stay Safe\n        </h1>\n      </div>\n    )\n  }\n}\n","import React from 'react'\n\nexport default class Statedata extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      data: [],\n      show: false\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://api.covid19india.org/data.json')\n      .then((response) => response.json())\n      .then((findresponse) => {\n        this.setState({\n          data: findresponse,\n          isLoaded: false\n        })\n      })\n  }\n  render = () => {\n    const stateData = this.state.data\n    const isLoaded = this.state\n    const summary = this.state.data.statewise\n    const totalSummary = summary && summary[0]\n    {\n    }\n\n    if (!isLoaded) {\n      return <div>Loading....</div>\n    } else {\n      return (\n        <div className=\"state-data\">\n          {totalSummary ? (\n            <div>\n              <div className=\"india-widget\">\n                <div className=\"info-text\">Coronavirus Status in India</div>\n                <div className=\"col-1-4\">\n                  <div className=\"content\">\n                    <div className=\"title\">Confirmed</div>\n                    <div className=\"case-number\">{totalSummary.confirmed}</div>\n                  </div>\n                </div>\n                <div className=\"col-1-4\">\n                  <div className=\"content\" style={{backgroundColor: '#fef4e7'}}>\n                    <div className=\"title\">Active</div>\n                    <div className=\"case-number\" style={{ color: 'orange' }}>\n                      {totalSummary.active}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-1-4\">\n                  <div className=\"content\" style={{backgroundColor: '#e9f4e9'}}>\n                    <div className=\"title\">Recovered</div>\n                    <div className=\"case-number\" style={{ color: '#28a745' }}>\n                      {totalSummary.recovered}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-1-4\">\n                  <div className=\"content\" style={{backgroundColor: '#fce6e7'}}>\n                    <div className=\"title\">Deceased</div>\n                    <div className=\"case-number\" style={{ color: '#ff073a' }}>\n                      {totalSummary.deaths}\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className='last-updated'>Last updated: {totalSummary.lastupdatedtime}</div>\n            </div>\n          ) : null}\n          <div className={this.state.shown ? 'expand' : 'table-data'}>\n            <div className=\"rsptable\">\n              <div className=\"row header\">\n                <div className=\"cell\">State</div>\n                <div className=\"cell\">Active</div>\n                <div className=\"cell\">Deaths</div>\n                <div className=\"cell\">Recovered</div>\n              </div>\n              {stateData.statewise &&\n                stateData.statewise.map((data) => (\n                  <div className=\"row\">\n                    <div className=\"cell\">{data.state}</div>\n                    <div className=\"cell\">{data.active}</div>\n                    <div className=\"cell\">{data.deaths}</div>\n                    <div className=\"cell\">{data.recovered}</div>\n                  </div>\n                ))}\n            </div>\n          </div>\n          <div\n            className=\"more-btn\"\n            onClick={() => this.setState({ shown: !this.state.shown })}\n          >\n            <a className=\"custom-link\">\n              {this.state.shown ? 'Hide More' : 'Show More'}\n            </a>\n          </div>\n        </div>\n      )\n    }\n  }\n}\n","import React from 'react'\nimport './styles.scss'\nimport Banner from './Banner'\nimport Statedata from './Statedata'\n\nexport default class Covid19 extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      posts: []\n    }\n  }\n  render = () => {\n    return (\n      <div className=\"covid-widget\">\n        <div className=\"grid\">\n          <Banner />\n          <Statedata />\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport Home from '../src/Pages/Home'\nimport Covid19 from '../src/Pages/Covid19'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nexport default class App extends React.Component {\n  render = () => {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/covid\">\n            <Covid19 />\n          </Route>\n        </Switch>\n      </Router>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './common.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}